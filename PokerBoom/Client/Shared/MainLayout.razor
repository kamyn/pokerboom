@inherits LayoutComponentBase
@inject AuthenticationStateProvider authProvider
@inject ILocalStorageService localStorage
@inject NavigationManager navigation
@inject HttpClient _httpClient
@inject BalanceState _balanceState
@using PokerBoom.Shared.Models
@using PokerBoom.Client.States

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<AuthorizeView Roles="Administrator">
    <Authorized>
        <MudAppBar Color="Color.Primary" Fixed="false">
            <MudText Typo="Typo.h6">POKERBOOM</MudText>
            <MudButton Class="ml-3" Variant="Variant.Filled" Color="Color.Primary" OnClick="ToTableList">Игровые столы</MudButton>
            <MudButton Class="ml-3" Variant="Variant.Filled" Color="Color.Primary" OnClick="ToGamesList">Просмотр игр</MudButton>
            <MudSpacer />
            <MudText Typo="Typo.button">@context.User.Identity.Name</MudText>
            <MudText Typo="Typo.button" Class="ml-4">Баланс: @Balance</MudText>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" Class="ml-4" OnClick="Logout">Выйти</MudButton>
        </MudAppBar>
    </Authorized>
</AuthorizeView>

<AuthorizeView Roles="User">
    <Authorized>
        <MudAppBar Color="Color.Primary" Fixed="false">
            <MudText Typo="Typo.h6">POKERBOOM</MudText>
            <MudSpacer />
            <MudText Typo="Typo.button">@context.User.Identity.Name</MudText>
            <MudText Typo="Typo.button" Class="ml-4">Баланс: @Balance</MudText>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" Class="ml-4" OnClick="Logout">Выйти</MudButton>
        </MudAppBar>
    </Authorized>
</AuthorizeView>

@Body

@code {
    protected int Balance { get; set; }

    protected void OnBalanceChanged(int balance)
    {
        Balance = balance;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        _balanceState.OnBalanceChanged += OnBalanceChanged;
    }

    protected async Task Logout()
    {
        await localStorage.RemoveItemAsync("authToken");
        ((AppAuthenticationStateProvider)authProvider).MarkUserAsLoggedOut();
    }

    protected async Task ToGamesList()
    {
        navigation.NavigateTo("/gameslist");
    }

    protected async Task ToTableList()
    {
        navigation.NavigateTo("/");
    }
}