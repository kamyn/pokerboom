
<style>
    .selected {
        background-color: #1E88E5 !important;
    }

    .selected > td {
        color: white !important;
    }

    .selected > td .mud-input {
        color: white !important;
    }
</style>

<MudGrid Spacing="4" Class="pa-6">
    <MudItem xs="8">
        <MudTable Items="@Elements" Dense="true" Filter="new Func<Element,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1" 
                  @ref="mudTable" RowClassFunc="@SelectedRowClassFunc" T="Element">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Игровые столы</MudText>
                <MudSpacer />
                <MudTextField @bind-Value="searchString1" Placeholder="Поиск" Adornment="Adornment.Start" Class="mt-0"></MudTextField>
            </ToolBarContent>
            <HeaderContent>
                <MudTh><MudTableSortLabel SortBy="new Func<Element, object>(x=>x.Name)">Название</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Element, object>(x=>x.Players)">Игроки</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Element, object>(x=>x.SB)">Ставки</MudTableSortLabel></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Название">@context.Name</MudTd>
                <MudTd DataLabel="Игроки">@context.Players/6</MudTd>
                <MudTd DataLabel="Ставки">@context.SB/@context.SB</MudTd>
                </RowTemplate>
            <PagerContent>
                 <MudTablePager HorizontalAlignment="HorizontalAlignment.End" HideRowsPerPage="true" />
            </PagerContent>
        </MudTable>
    </MudItem>

    <MudItem xs="2" >
        <MudGrid Class="d-block">
            <MudTextField Class="mb-4" @bind-Value="TextValue" Label="Количество фишек" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">Присоединиться</MudButton> 
        </MudGrid>
         
    </MudItem>
</MudGrid>

@code {
    private int selectedRowNumber = -1;
    private MudTable<Element> mudTable;
    protected string TextValue { get; set; }
    protected record Element (string Name, int Players, int SB);
    protected string searchString1 { get; set; }
    protected Element selectedItem1 = null;

    private string SelectedRowClassFunc(Element element, int rowNumber)
    {
        if (selectedRowNumber == rowNumber)
        {
            selectedRowNumber = -1;
            return string.Empty;
        }
        else if (mudTable.SelectedItem != null && mudTable.SelectedItem.Equals(element))
        {
            selectedRowNumber = rowNumber;
            return "selected";
        }
        else
        {
            return string.Empty;
        }
    }

    private IEnumerable<Element> Elements = new List<Element>()
    {
        new Element("стол 1", 3, 10),
        new Element("стол 2", 2, 50),
        new Element("стол 3", 5, 5),
        new Element("стол 4", 0, 200),
    };

    private bool FilterFunc1(Element element) => FilterFunc(element, searchString1);

    private bool FilterFunc(Element element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
}
